#include <iostream>
#include <thread>
#include <mutex>
using namespace std;

mutex print_mutex;

void PrintWords(int value) {
    string Words[4] = {"Be Brave", "Fortitude", "Excellence", "Uprightness"};
    string output;
    output.reserve(Words[value].size() * 800 + 800); // reserve for performance
    for (int i = 1; i <= 800; i++) {
        output += Words[value];
        output += to_string(i) + ". " + Words[value] + " ";
    }

    lock_guard<mutex> lock(print_mutex);
    cout << output;
}

void ThreadedPrint() {
    cout << "Threaded Printing (Parallel).." << endl;

    thread t1(PrintWords, 0);
    thread t2(PrintWords, 1);
    thread t3(PrintWords, 2);
    thread t4(PrintWords, 3);

    t1.join();
    t2.join();
    t3.join();
    t4.join();

    cout << endl << "Jhevan P. Baque" << endl;
}

int main() {
    ThreadedPrint();
    return 0;
}